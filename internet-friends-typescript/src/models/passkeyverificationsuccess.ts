/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Verification status
 */
export const PasskeyVerificationSuccessStatus = {
  Success: "success",
} as const;
/**
 * Verification status
 */
export type PasskeyVerificationSuccessStatus = ClosedEnum<
  typeof PasskeyVerificationSuccessStatus
>;

export type PasskeyVerificationSuccess = {
  /**
   * Verification status
   */
  status: PasskeyVerificationSuccessStatus;
};

/** @internal */
export const PasskeyVerificationSuccessStatus$inboundSchema: z.ZodNativeEnum<
  typeof PasskeyVerificationSuccessStatus
> = z.nativeEnum(PasskeyVerificationSuccessStatus);

/** @internal */
export const PasskeyVerificationSuccessStatus$outboundSchema: z.ZodNativeEnum<
  typeof PasskeyVerificationSuccessStatus
> = PasskeyVerificationSuccessStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PasskeyVerificationSuccessStatus$ {
  /** @deprecated use `PasskeyVerificationSuccessStatus$inboundSchema` instead. */
  export const inboundSchema = PasskeyVerificationSuccessStatus$inboundSchema;
  /** @deprecated use `PasskeyVerificationSuccessStatus$outboundSchema` instead. */
  export const outboundSchema = PasskeyVerificationSuccessStatus$outboundSchema;
}

/** @internal */
export const PasskeyVerificationSuccess$inboundSchema: z.ZodType<
  PasskeyVerificationSuccess,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: PasskeyVerificationSuccessStatus$inboundSchema,
});

/** @internal */
export type PasskeyVerificationSuccess$Outbound = {
  status: string;
};

/** @internal */
export const PasskeyVerificationSuccess$outboundSchema: z.ZodType<
  PasskeyVerificationSuccess$Outbound,
  z.ZodTypeDef,
  PasskeyVerificationSuccess
> = z.object({
  status: PasskeyVerificationSuccessStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PasskeyVerificationSuccess$ {
  /** @deprecated use `PasskeyVerificationSuccess$inboundSchema` instead. */
  export const inboundSchema = PasskeyVerificationSuccess$inboundSchema;
  /** @deprecated use `PasskeyVerificationSuccess$outboundSchema` instead. */
  export const outboundSchema = PasskeyVerificationSuccess$outboundSchema;
  /** @deprecated use `PasskeyVerificationSuccess$Outbound` instead. */
  export type Outbound = PasskeyVerificationSuccess$Outbound;
}

export function passkeyVerificationSuccessToJSON(
  passkeyVerificationSuccess: PasskeyVerificationSuccess,
): string {
  return JSON.stringify(
    PasskeyVerificationSuccess$outboundSchema.parse(passkeyVerificationSuccess),
  );
}

export function passkeyVerificationSuccessFromJSON(
  jsonString: string,
): SafeParseResult<PasskeyVerificationSuccess, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PasskeyVerificationSuccess$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PasskeyVerificationSuccess' from JSON`,
  );
}
