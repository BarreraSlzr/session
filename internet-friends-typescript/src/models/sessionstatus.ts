/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Session status
 */
export const SessionStatusStatus = {
  Valid: "valid",
} as const;
/**
 * Session status
 */
export type SessionStatusStatus = ClosedEnum<typeof SessionStatusStatus>;

export type SessionStatus = {
  /**
   * Session status
   */
  status: SessionStatusStatus;
  /**
   * User ID associated with the session
   */
  userId: string;
};

/** @internal */
export const SessionStatusStatus$inboundSchema: z.ZodNativeEnum<
  typeof SessionStatusStatus
> = z.nativeEnum(SessionStatusStatus);

/** @internal */
export const SessionStatusStatus$outboundSchema: z.ZodNativeEnum<
  typeof SessionStatusStatus
> = SessionStatusStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SessionStatusStatus$ {
  /** @deprecated use `SessionStatusStatus$inboundSchema` instead. */
  export const inboundSchema = SessionStatusStatus$inboundSchema;
  /** @deprecated use `SessionStatusStatus$outboundSchema` instead. */
  export const outboundSchema = SessionStatusStatus$outboundSchema;
}

/** @internal */
export const SessionStatus$inboundSchema: z.ZodType<
  SessionStatus,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: SessionStatusStatus$inboundSchema,
  userId: z.string(),
});

/** @internal */
export type SessionStatus$Outbound = {
  status: string;
  userId: string;
};

/** @internal */
export const SessionStatus$outboundSchema: z.ZodType<
  SessionStatus$Outbound,
  z.ZodTypeDef,
  SessionStatus
> = z.object({
  status: SessionStatusStatus$outboundSchema,
  userId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SessionStatus$ {
  /** @deprecated use `SessionStatus$inboundSchema` instead. */
  export const inboundSchema = SessionStatus$inboundSchema;
  /** @deprecated use `SessionStatus$outboundSchema` instead. */
  export const outboundSchema = SessionStatus$outboundSchema;
  /** @deprecated use `SessionStatus$Outbound` instead. */
  export type Outbound = SessionStatus$Outbound;
}

export function sessionStatusToJSON(sessionStatus: SessionStatus): string {
  return JSON.stringify(SessionStatus$outboundSchema.parse(sessionStatus));
}

export function sessionStatusFromJSON(
  jsonString: string,
): SafeParseResult<SessionStatus, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SessionStatus$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SessionStatus' from JSON`,
  );
}
